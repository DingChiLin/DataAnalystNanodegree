source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test.R')
View(df)
View(df)
getwd()
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test.R')
df
table(df)
table(df$gender)
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test.R')
table(df$fav.reddit)
str(df)
a <- c(1,2,3,4,5)
a
a[c(2,4)]
a[c(2,6)]
a[2,3]
a[2]
a[[2,4]]
y<-matrix(1:20, nrow=5,ncol=4)
y
cells <- c(1,26,24,68)
rnames <- c("R1", "R2")
cnames <- c("C1", "C2")
mymatrix <- matrix(cells, nrow=2, ncol=2, byrow=TRUE,
dimnames=list(rnames, cnames))
mymatrix
y[1,2]
y[1,]
y[,1]
help(array)
z = matrix(1:20, c(5,4))
z
a = array(1:20, c(5,4))
a
a = array(1:20, c(5,4,3))
a
a = array(1:24, c(2,3,4))
a
a[1,2,3]
a[1,2,]
a[1,2,2:3]
a = matrix(1:24, c(2,3,4))
a
a[1,2,3]
a[1,2]
d <- c(1,2,3,4)
e <- c("red", "white", "red", NA)
f <- c(TRUE,TRUE,TRUE,FALSE)
mydata <- data.frame(d,e,f)
mydata
names(mydata) <- c("ID","Color","Passed") # variable names
mydata
mydata[1,2]
mydata['ID']
mydata['ID','Color']
mydata[c('ID','Color')]
mydata$Passed
w <- list(name="Fred", mynumbers=a, mymatrix=y, age=5.3)
w
w[1]
w[2]
w[2][2,3]
w[2][2]
w[2,3]
w[2]
w[[2]
]
w[[2]]
w[[2]][2.3]
w[[2]][2,4]
w$mynumbers
w$mynumbers[2,4]
r = rep("male",20)
r
gender <- c(rep("male",20), rep("female", 30))
gender
g <- factor(gender)
g
summary(g)
summary(gender)
length(g)
length(gender)
length(df)
df
str(df)
dim(df)
class(df)
class(w)
class(g)
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test.R')
install.packages('ggplot2', dependencies = T)
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test.R')
a <- c(1,2)
a.b <- c(3,4)
a
a.b
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test.R')
?read.delim
?read.delim2
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test2.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test2.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test2.R')
View(df)
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test2.R')
View(df)
View(df)
View(df)
View(df)
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test2.R')
View(df)
View(df)
View(df)
list.files()
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test2.R')
names(df)
table(df)
table(df$userid)
table(df$age)
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test2.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test2.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test2.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test2.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test2.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test2.R')
theme_set(theme_minimal(24))
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test2.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test2.R')
theme_set(theme_minimal(22))
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test2.R')
theme_set(theme_minimal(1))
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test2.R')
theme_set(theme_minimal(0))
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test2.R')
theme_set(theme_grey())
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test2.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test2.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test2.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test2.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test2.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test2.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test2.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test2.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test2.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test2.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test2.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test2.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test2.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test2.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test2.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/free_test2.R')
setwd('~/Documents/GitHub/DataAnalystNanodegree/R_test/EDA_Course_Materials/lesson3')
df <- read.delim('pseudo_facebook.tsv')
install.packages('ggplot2')
library(ggplot2)
qplot(data = df, x = dob_day)
install.packages("ggplot2")
install.packages('ggplot2')
library(ggplot2)
qplot(data = df, x = dob_day)
qplot(data = df, x = dob_day)
plot = qplot(data = df, x = dob_day) +
scale_x_discrete(breaks=1:31) +
plot = qplot(data = df, x = dob_day) +
scale_x_discrete(breaks=1:31) +
facet_warp(~dob_month, nwor=4)
print(plot)
qplot(data = df, x = dob_day) +
scale_x_discrete(breaks=1:31) +
facet_warp(~dob_month, nwor=4)
qplot(data = df, x = dob_day) +
scale_x_discrete(breaks=1:31) +
facet_wrap(~dob_month, nwor=4)
qplot(data = df, x = dob_day) +
scale_x_discrete(breaks=1:31) +
facet_wrap(~dob_month, ncol=3)
Notes:
qplot(data = df, x=friend_count)
qplot(data = df, x=friend_count)
qplot(data = df, x=friend_count, xlim=c(0, 1000))
qplot(x = friend_count, data = df, binwidth = 10) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50))
# Add it to the code below.
qplot(x = friend_count, data = df, binwidth = 1) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50))
qplot(x = friend_count, data = df, binwidth = 10) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50))
qplot(x = friend_count, data = df, binwidth = 10) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50))
+facet_wrap(~gender)
qplot(x = friend_count, data = df, binwidth = 10) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
qplot(x = friend_count, data = subset(df, !is.na(gender), binwidth = 10) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
qplot(x = friend_count, data = subset(df, !is.na(gender)), binwidth = 10) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
df2 = subset(df, !is.na(gender))
qplot(x = friend_count, data = subset(df, !is.na(gender)), binwidth = 10) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
View(df2)
table(df$gender)
by(df$friend_count, df$gender, summary)
by(df$friend_count, df$gender, levels)
by(df$friend_count, df$gender, str)
by(df$friend_count, df$gender, mean)
by(df$friend_count, df$gender, median)
by(df$friend_count, df$gender, summary)
qplot(data=df, x=tenure)
qplot(data=df, x=tenure, color = I('black'))
qplot(data=df, x=tenure, color = I('orange'))
qplot(data=df, x=tenure, color = I('orange'), fill=I('#099DD9'))
qplot(data=df, x=tenure, color = I('black'), fill=I('#099DD9'))
qplot(data=df, x=tenure, binwidth=30, color = I('black'), fill=I('#099DD9'))
qplot(data=df, x=tenure/365, binwidth=1, color = I('black'), fill=I('#099DD9'))
qplot(data=df, x=tenure/365, binwidth=1, breaks=seq(1,7,1), color = I('black'), fill=I('#099DD9'))
qplot(data=df, x=tenure/365, binwidth=1, breaks=seq(1,7,1), xlim = c(0,7), color = I('black'), fill=I('#099DD9'))
qplot(data=df, x=tenure/365, binwidth=0.25, breaks=seq(1,7,1), xlim = c(0,7), color = I('black'), fill=I('#099DD9'))
qplot(data=df, x=tenure/365, breaks=seq(1,7,1), xlim = c(0,7), color = I('black'), fill=I('#099DD9'))
qplot(data=df, x=tenure/365, breaks=seq(1,7,1), color = I('black'), fill=I('#099DD9'))
qplot(data=df, x=tenure/365, breaks=seq(1,7,1), limits=c(0,7), color = I('black'), fill=I('#099DD9'))
qplot(data=df, x=tenure/365, binwidth=0.25, breaks=seq(1,7,1), limits=c(0,7), color = I('black'), fill=I('#099DD9'))
qplot(data=df, x=tenure/365, binwidth=0.25, breaks=seq(1,7,1), limits=c(0,7), color = I('black'), fill=I('#099DD9'))
seq(1,7,1)
seq(1,7,0.25)
### Tenure
qplot(data=df, x=tenure/365, binwidth=0.25, breaks=seq(1,7,0.25), limits=c(0,7), color = I('black'), fill=I('#099DD9'))
qplot(data=df, x=tenure/365, binwidth=0.25, breaks=seq(0,7,0.25), limits=c(0,7), color = I('black'), fill=I('#099DD9'))
qplot(data=df, x=tenure/365, binwidth=0.25, breaks=seq(0,7,0.25), color = I('black'), fill=I('#099DD9'))
qplot(data=df, x=tenure/365, breaks=seq(0,7,0.25), color = I('black'), fill=I('#099DD9'))
(data=df, x=tenure/365, breaks=seq(0,7,0.25), xlab="T", color = I('black'), fill=I('#099DD9'))
qplot(data=df, x=tenure/365, breaks=seq(0,7,0.25), xlab="T", color = I('black'), fill=I('#099DD9'))
qplot(data=df, x=tenure/365, breaks=seq(0,7,0.25), xlab="Number of years using Facebook", ylab="Number of users in sample", color = I('black'), fill=I('#099DD9'))
qplot(data=df, x=tenure/365, breaks=seq(0,3,0.25), xlab="Number of years using Facebook", ylab="Number of users in sample", color = I('black'), fill=I('#099DD9'))
qplot(data=df, x=tenure/365, breaks=seq(0,7,0.25), xlab="Number of years using Facebook", ylab="Number of users in sample", color = I('black'), fill=I('#099DD9'))
qplot(data=df, x=age, xlab="Number of years using Facebook", ylab="Number of users in sample", color = I('black'), fill=I('#099DD9'))
qplot(data=df, x=age, xlab="Age of user", ylab="Number of users in sample", color = I('black'), fill=I('#099DD9'))
qplot(data=df, x=age, xlab="Age of user", binwidth=1, ylab="Number of users in sample", color = I('black'), fill=I('#099DD9'))
qplot(data=df, x=age, xlab="Age of user", binwidth=10, ylab="Number of users in sample", color = I('black'), fill=I('#099DD9'))
qplot(data=df, x=age, xlab="Age of user", binwidth=1, ylab="Number of users in sample", color = I('black'), fill=I('#099DD9'))
qplot(data=df, x=age, xlab="Age of user", binwidth=10, ylab="Number of users in sample", color = I('black'), fill=I('#099DD9'))
qplot(data=df, x=age, xlab="Age of user", binwidth=1, ylab="Number of users in sample", color = I('black'), fill=I('#099DD9'))
### Labeling Plots
qplot(data=df, x=age, xlab="Age of user", binwidth=10, ylab="Number of users in sample", color = I('black'), fill=I('#099DD9'))
summary(df$friend_count)
***
summary(log10(df$friend_count))
summary(log10(df$friend_count+1))
summary(sqrt(df$friend_count))
qplot(data=df, x=friend_count)
install.packages('gridExtra')
library(gridExtra)
p1 = qplot(data=df, x=friend_count)
p2 = qplot(data=df, x=age)
multiplot(p1, p2, cols=2)
library(gridExtra)
p1 = qplot(data=df, x=friend_count)
p2 = qplot(data=df, x=age)
multiplot(p1, p2, cols=2)
library(gridExtra)
par(mfrow = c(2, 1))
p1 = qplot(data=df, x=friend_count)
p2 = qplot(data=df, x=age)
***
library(gridExtra)
g1 = qplot(data=df, x=friend_count)
g2 = qplot(data=df, x=age)
grid.arrange( g1, g2, ncol=2)
library(gridExtra)
g1 = qplot(data=df, x=friend_count)
g2 = qplot(data=df, x=age)
grid.arrange( g1, g2, nrow=2)
library(gridExtra)
g1 = qplot(data=df, x=friend_count)
g2 = qplot(data=df, x=log10(friend_count))
grid.arrange( g1, g2, nrow=2)
library(gridExtra)
g1 = qplot(data=df, x=friend_count)
g2 = qplot(data=df, x=log10(friend_count))
g2 = qplot(data=df, x=sqrt(friend_count))
grid.arrange( g1, g2, nrow=2)
library(gridExtra)
g1 = qplot(data=df, x=friend_count)
g2 = qplot(data=df, x=log10(friend_count))
g2 = qplot(data=df, x=sqrt(friend_count))
grid.arrange( g1, g2, g3, nrow=3)
library(gridExtra)
g1 = qplot(data=df, x=friend_count)
g2 = qplot(data=df, x=log10(friend_count))
g3 = qplot(data=df, x=sqrt(friend_count))
grid.arrange( g1, g2, g3, nrow=3)
library(gridExtra)
g1 = qplot(data=df, x=friend_count)
g2 = qplot(data=df, x=log10(friend_count+1))
g3 = qplot(data=df, x=sqrt(friend_count))
grid.arrange( g1, g2, g3, nrow=3)
library(gridExtra)
g1 = qplot(data=df, x=friend_count)
g2 = qplot(data=df, x=log10(friend_count+1))
g3 = qplot(data=df, x=sqrt(friend_count))
grid.arrange( g1, g2, g3, nrow=3)
library(gridExtra)
g1 <- qplot(data=df, x=friend_count)
g2 <- qplot(data=df, x=log10(friend_count+1))
g3 <- qplot(data=df, x=sqrt(friend_count))
grid.arrange( g1, g2, g3, nrow=3)
library(gridExtra)
g1 <- qplot(data=df, x=friend_count)
g2 <- qplot(data=df, x=log10(friend_count+1))
g3 <- qplot(data=df, x=sqrt(friend_count))
g4 <- g1+scale_x_log10()
grid.arrange( g1, g2, g3, g4, nrow=3)
library(gridExtra)
g1 <- qplot(data=df, x=friend_count)
g2 <- qplot(data=df, x=log10(friend_count+1))
g3 <- qplot(data=df, x=sqrt(friend_count))
g4 <- g1+scale_x_log10()
grid.arrange( g1, g2, g3, g4, nrow=4)
library(gridExtra)
g1 <- qplot(data=df, x=log10(friend_count+1))
g2 <- qplot(data=df, x=friend_count) + scale_x_log10()
grid.arrange( g1, g2, nrow=4)
library(gridExtra)
g1 <- qplot(data=df, x=log10(friend_count+1))
g2 <- qplot(data=df, x=friend_count) + scale_x_log10()
gg <- ggplot(data=df, aes(x=friend_count)) + scale_x_log10()
grid.arrange( g1, g2, gg, nrow=3)
library(gridExtra)
g1 <- qplot(data=df, x=log10(friend_count+1))
g2 <- qplot(data=df, x=friend_count) + scale_x_log10()
gg <- ggplot(data=df, aes(x=friend_count)) + geom_histogram()  + scale_x_log10()
grid.arrange( g1, g2, gg, nrow=3)
qplot(data=df, x=friend_count, y=..count..)
qplot(data=df, x=friend_count, y=..count..)
qplot(data=df, x=friend_count, geom = 'freqpoly')
```{r Frequency Polygons}
qplot(data=df, x=friend_count, geom = 'freqpoly', color=gender)
qplot(data=subset(df, !is.na(gender)), x=friend_count, geom = 'freqpoly', color=gender)
qplot(data=subset(df, !is.na(gender)), x=friend_count, geom = 'freqpoly', color=gender, breaks=seq(0,1000,50))
### Add a Scaling Layer
Notes:
qplot(data=subset(df, !is.na(gender)), x=friend_count, geom = 'freqpoly', color=gender)
### Add a Scaling Layer
qplot(data=subset(df, !is.na(gender)), x=friend_count, geom = 'freqpoly', color=gender)
qplot(data=subset(df, !is.na(gender)), x=friend_count, geom = 'freqpoly', color=gender, breaks=seq(0,1000,1))
qplot(data=subset(df, !is.na(gender)), x=friend_count, geom = 'freqpoly', color=gender)
qplot(data=subset(df, !is.na(gender)), x=friend_count, geom = 'freqpoly', color=gender, breaks=seq(0,5000,500))
qplot(data=subset(df, !is.na(gender)), x=friend_count, geom = 'freqpoly', color=gender, breaks=seq(0,1000,50))
qplot(data=subset(df, !is.na(gender)), x=friend_count, geom = 'freqpoly', color=gender, breaks=seq(-50,1000,50))
qplot(data=subset(df, !is.na(gender)), x=friend_count, geom = 'freqpoly', color=gender, breaks=seq(-1,1000,50))
qplot(data=subset(df, !is.na(gender)), x=friend_count, geom = 'freqpoly', color=gender, breaks=seq(-1,1000,1))
qplot(data=subset(df, !is.na(gender)), x=friend_count, geom = 'freqpoly', color=gender, breaks=seq(-20,1000,10))
qplot(data=subset(df, !is.na(gender)), x=friend_count, geom = 'freqpoly', color=gender, breaks=seq(-0,1000,10))
qplot(data=subset(df, !is.na(gender)), x=friend_count, geom = 'freqpoly', color=gender, breaks=seq(-0,1000,50))
grid.arrange( g1, g2, gg, nrow=3)
```
***
qplot(data=subset(df, !is.na(gender)), x=friend_count, geom = 'freqpoly', color=gender, breaks=seq(0,1000,50))
qplot(data=subset(df, !is.na(gender)), x=friend_count, y=..count.., geom = 'freqpoly', color=gender, breaks=seq(0,1000,50))
qplot(data=subset(df, !is.na(gender)), x=friend_count, y=..count..,  color=gender, breaks=seq(0,1000,50))
qplot(data=subset(df, !is.na(gender)), x=friend_count,  color=gender, breaks=seq(0,1000,50))
qplot(data=subset(df, !is.na(gender)), x=friend_count, y=..count.., geom = 'freqpoly', color=gender, breaks=seq(0,1000,50))
qplot(data=subset(df, !is.na(gender)), x=friend_count, y=sum(..count..), geom = 'freqpoly', color=gender, breaks=seq(0,1000,50))
qplot(data=subset(df, !is.na(gender)), x=friend_count, y=..count../sum(..count..), geom = 'freqpoly', color=gender, breaks=seq(0,1000,50))
qplot(data=subset(df, !is.na(gender)), x=friend_count, y=..count../sum(..count..), geom = 'freqpoly', color=gender, breaks=seq(0,1000,50), xlab='Friend Count', ylab='Proportion of Users with that friend count')
qplot(data=subset(df, !is.na(gender)), x=friend_count, y=..count../sum(..count..), geom = 'freqpoly', color=gender, breaks=seq(500,1000,50), xlab='Friend Count', ylab='Proportion of Users with that friend count')
qplot(data=subset(df, !is.na(gender)), x=friend_count, y=..count../sum(..count..), geom = 'freqpoly', color=gender, breaks=seq(100,500,50), xlab='Friend Count', ylab='Proportion of Users with that friend count')
qplot(data=subset(df, !is.na(gender)), x=friend_count, y=..count../sum(..count..), geom = 'freqpoly', color=gender, breaks=seq(700,1000,50), xlab='Friend Count', ylab='Proportion of Users with that friend count')
qplot(data=subset(df, !is.na(gender)), x=friend_count, y=..count../sum(..count..), geom = 'freqpoly', color=gender, breaks=seq(800,1500,50), xlab='Friend Count', ylab='Proportion of Users with that friend count')
qplot(data=subset(df, !is.na(gender)), x=friend_count, y=..count../sum(..count..), geom = 'freqpoly', color=gender, breaks=seq(800,2000,50), xlab='Friend Count', ylab='Proportion of Users with that friend count')
qplot(data=subset(df, !is.na(gender)), x=friend_count, y=..count../sum(..count..), geom = 'freqpoly', color=gender, breaks=seq(800,3000,50), xlab='Friend Count', ylab='Proportion of Users with that friend count')
qplot(data=subset(df, !is.na(gender)), x=friend_count, y=..count../sum(..count..), geom = 'freqpoly', color=gender, breaks=seq(800,3000,50), xlab='Friend Count', ylab='Proportion of Users with that friend count') + scale_x_log10()
qplot(data=subset(df, !is.na(gender)), x=friend_count, y=..count../sum(..count..), geom = 'freqpoly', color=gender, breaks=seq(800,3000,50), xlab='Friend Count', ylab='Proportion of Users with that friend count') + scale_x_log10()
g1 <- qplot(data=df, x=log10(friend_count+1))
qplot(data=subset(df, !is.na(gender)), x=friend_count, y=..count../sum(..count..), geom = 'freqpoly', color=gender, breaks=seq(800,3000,50), xlab='Friend Count', ylab='Proportion of Users with that friend count') + scale_x_log10()
qplot(data=subset(df, !is.na(gender)), x=friend_count, y=..count../sum(..count..), geom = 'freqpoly', color=gender, breaks=seq(0,3000,50), xlab='Friend Count', ylab='Proportion of Users with that friend count') + scale_x_log10()
qplot(data=subset(df, !is.na(gender)), x=friend_count, y=..count../sum(..count..), geom = 'freqpoly', color=gender, breaks=seq(0,3000,50), xlab='Friend Count', ylab='Proportion of Users with that friend count') + scale_x_log10()
qplot(data=subset(df, !is.na(gender)), x=friend_count, y=..count../sum(..count..), geom = 'freqpoly', color=gender, breaks=seq(0,3000,50), xlab='Friend Count', ylab='Proportion of Users with that friend count') +
scale_x_log10()
g1 = qplot(data=subset(df, !is.na(gender)), x=friend_count, y=..count../sum(..count..), geom = 'freqpoly', color=gender, breaks=seq(0,3000,50), xlab='Friend Count', ylab='Proportion of Users with that friend count')
grid.arrange( g1, nrow=2)
g1 = qplot(data=subset(df, !is.na(gender)), x=friend_count, y=..count../sum(..count..), geom = 'freqpoly', color=gender, breaks=seq(0,3000,50), xlab='Friend Count', ylab='Proportion of Users with that friend count')
g2 = g1 + scale_x_log10()
grid.arrange( g1, g2, nrow=2)
g1 = qplot(data=subset(df, !is.na(gender)), x=friend_count, y=..count../sum(..count..), geom = 'freqpoly', color=gender, breaks=seq(0,3000,50), xlab='Friend Count', ylab='Proportion of Users with that friend count')
g2 = qplot(data=subset(df, !is.na(gender)), x=friend_count, y=..count../sum(..count..), geom = 'freqpoly') +
scale_x_log10()
grid.arrange( g1, g2, nrow=2)
g1 = qplot(data=subset(df, !is.na(gender)), x=friend_count, y=..count../sum(..count..), geom = 'freqpoly', color=gender, breaks=seq(0,3000,50), xlab='Friend Count', ylab='Proportion of Users with that friend count')
g2 = qplot(data=subset(df, !is.na(gender)), x=friend_count, y=..count../sum(..count..), geom = 'freqpoly', color=gender) +
scale_x_log10()
grid.arrange( g1, g2, nrow=2)
g1 = qplot(data=subset(df, !is.na(gender)), x=friend_count, y=..count../sum(..count..), geom = 'freqpoly', color=gender, breaks=seq(0,3000,50), xlab='Friend Count', ylab='Proportion of Users with that friend count')
g2 = qplot(data=subset(df, !is.na(gender)), x=friend_count, y=..count../sum(..count..), color=gender) +
scale_x_log10()
grid.arrange( g1, g2, nrow=2)
g1 = qplot(data=subset(df, !is.na(gender)), x=friend_count, y=..count../sum(..count..), geom = 'freqpoly', color=gender, breaks=seq(0,3000,50), xlab='Friend Count', ylab='Proportion of Users with that friend count')
g2 = qplot(data=subset(df, !is.na(gender)), x=friend_count, y=..count../sum(..count..), geom = 'freqpoly', color=gender) +
scale_x_log10()
grid.arrange( g1, g2, nrow=2)
qplot(data=subset(df, !is.na(gender)), x=likes, y=..count../sum(..count..), geom = 'freqpoly', color=gender, breaks=seq(0,3000,50), xlab='Friend Count', ylab='Proportion of Users with that friend count')
```{r Likes on the Web}
qplot(data=subset(df, !is.na(gender)), x=likes, y=..count../sum(..count..), geom = 'freqpoly', color=gender, breaks=seq(0,1000,50), xlab='Friend Count', ylab='Proportion of Users with that friend count')
qplot(data=subset(df, !is.na(gender)), x=likes, y=..count../sum(..count..), geom = 'freqpoly', color=gender, breaks=seq(100,1000,50), xlab='Friend Count', ylab='Proportion of Users with that friend count')
```
qplot(data=subset(df, !is.na(gender)), x=www_likes, y=..count../sum(..count..), geom = 'freqpoly', color=gender, breaks=seq(100,1000,50), xlab='Friend Count', ylab='Proportion of Users with that friend count')
by(df$www_likes, df$gender, summary)
by(df$www_likes, df$gender, sum)
qplot(data=subset(df, !is.na(gender)), x=gender, y=friend_count, geom='boxplot')
qplot(data=subset(df, !is.na(gender)),
x=gender, y=friend_count,
geom='boxplot')
qplot(data=subset(df, !is.na(gender) & friend_count<1000),
x=gender, y=friend_count,
geom='boxplot')
qplot(data=subset(df, !is.na(gender)),
x=gender, y=friend_count,
geom='boxplot') +
coord_cartesian(ylim=c(0,100))
qplot(data=subset(df, !is.na(gender)),
x=gender, y=friend_count,
geom='boxplot') +
coord_cartesian(ylim=c(0,300))
qplot(data=subset(df, !is.na(gender)),
x=gender, y=friend_initiated,
geom='boxplot') +
coord_cartesian(ylim=c(0,300))
```
qplot(data=subset(df, !is.na(gender)),
x=gender, y=friend_initiated,
geom='boxplot') +
coord_cartesian(ylim=c(0,300))
```{r Friend Requests by Gender}
qplot(data=subset(df, !is.na(gender)),
x=gender, y=friendships_initiated,
geom='boxplot') +
coord_cartesian(ylim=c(0,300))
```{r Friend Requests by Gender}
qplot(data=subset(df, !is.na(gender)),
x=gender, y=friendships_initiated,
geom='boxplot') +
coord_cartesian(ylim=c(0,150))
by(df$friendships_initiated, df$gender, summary)
mobile_check_in <- NA
df$mobile_check_in <- NA
df$mobile_check_in <- ifelse(df$mobile_likes > 0)
df$mobile_check_in <- ifelse(df$mobile_likes > 0)
df$mobile_check_in <- NA
df$mobile_check_in <- ifelse(df$mobile_likes > 0)
```
df$mobile_check_in <- NA
df$mobile_check_in <- ifelse(df$mobile_likes > 0, 1, 0)
df$mobile_check_in2 <- ifelse(df$mobile_likes > 0, 1, 0)
df$mobile_check_in2 <- NULL
table(df$mobile_check_in)
mci <- table(df$mobile_check_in)
mci[1]
mci <- table(df$mobile_check_in)
mci[2] / (mci[1]+mci[2])
sum(df$mobile_check_in == 1)
sum(df$mobile_check_in == 1)/length(df$mobile_check_in)
length(df$mobile_check_in == 1)/length(df$mobile_check_in)
sum(df$mobile_check_in == 1)/sum(df$mobile_check_in)
sum(df$mobile_check_in)/length(df$mobile_check_in)
sum(df$mobile_check_in == 1)/length(df$mobile_check_in)
