install.packages("swirl")
install.packages("swirl")
swirl()
swirl()
install.packages("swirl")
swirl()
install.packages("swirl")
install.packages("swirl")
library("swirl")
swirl()
?diamond
?diamonds
summary(diamonds)
data(diamonds)
library(ggplot2)
install.packages("ggplot2")
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
table(diamonds)
dim(diamonds)
level(diamonds)
levels(diamonds)
levels(diamonds$x)
levels(diamonds$color)
str(diamonds)
?diamonds
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
View(diamonds)
View(diamonds)
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
summary(diamonds$price)
summary(diamonds$price < 500)
summary(diamonds$price < 250)
summary(diamonds$price >= 15000)
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
install.packages("gridExtra")
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
levels(diamonds$cut)
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
subset(diamonds, cut='Good')
subset(diamonds, cut='Good').length
subset(diamonds, cut='Good').count
levels(diamonds$cut)
subset(diamonds, diamonds$cut='Good').count
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
summary(subset(diamonds, cut=='Fair'))
summary(subset(diamonds, cut=='Fair')$price)
by(diamonds, diamonds$price, diamonds$cut)
by(diamonds, diamonds$price, summary)
by(diamonds, diamonds$cut, summary)
by(diamonds$price, diamonds$cut, summary)
by(diamonds$price, diamonds$cut, max)
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
by(diamonds$price, diamonds$color, max)
by(diamonds$price, diamonds$color, summary)
by(diamonds$price, diamonds$color, IQR)
?diamonds$color
?diamonds
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
source('~/Documents/GitHub/DataAnalystNanodegree/R_test/diamonds.R')
install.packages("tidyr")
install.packages("dplyr")
View(diamonds)
diamonds_table = tbl_df(diamonds)
diamonds_table = dplyr::tbl_df(diamonds)
diamonds_table
summary(diamonds_table)
tb = diamonds_table
tb
select(tb, color)
library(dplyr)
library(tidyr)
select(tb, color)
select(tb, color)
tb %>% select(color)
qplot(x = log10(price/carat+1), data = diamonds) + facet_wrap(~cut, scales="free")
tb %>% select(color)
install.packages("devtools")
devtools::install_github("rstudio/EDAWR")
library(EDAWR)
?tb
tb
View(tb)
remove(tb)
tb
?pollution
pollution
storms.name
storms$name
storms
levels(storms$wind)
summary(storms)
cases
names(cases)
names(cases)[-1]
names(cases)[1]
names(cases)[2]
names(cases)[1,2]
names(cases)[c(1,2)]
names(cases)[-1]
names(cases)[1:3]
names(cases)[2:3]
names(cases)[2:4]
unlist(cases[1:3])
cases[1:3]
cases[1:3,2:4]
cases[1:3,;]
cases[1:3,:]
cases[1:3,]
cases[1:3,2:4]
unlist(cases[1:3,2:4])
pf.pf.fc_by_age_months <- pf %.%
group_by(age_with_months) %.%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %.%
arrange(age_with_months)
library(dplyr)
pf.pf.fc_by_age_months <- pf %.%
group_by(age_with_months) %.%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %.%
arrange(age_with_months)
library(dplyr)
pf.fc_by_age_months2 <- pf %.%
group_by(age_with_months) %.%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %.%
arrange(age_with_months)
library(dplyr)
pf.fc_by_age_months2 <- pf %>%
group_by(age_with_months) %>%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %>%
arrange(age_with_months)
df$age_with_months <- df$age + (12-df$dob_month)/12.0
Lesson 4
========================================================
***
```{r Pseudo-Facebook User Data}
setwd('~/Documents/GitHub/DataAnalystNanodegree/R_test/EDA_Course_Materials/lesson3')
df <- read.delim('pseudo_facebook.tsv')
```
### Scatterplots and Perceived Audience Size
Notes:
***
### Scatterplots
Notes:
```{r Scatterplots}
library(ggplot2)
qplot(data = df, x = age, y = friend_count)
```
***
#### What are some things that you notice right away?
Response:
People who's age is under 30 have more friends
***
### ggplot Syntax
Notes:
```{r ggplot Syntax}
qplot(data = df, x = age, y = friend_count)
ggplot(aes(x=age, y=friend_count), data=df) + xlim(13,90) + geom_point()
summary(df$age)
```
***
### Overplotting
Notes:
```{r Overplotting}
ggplot(aes(x=age, y=friend_count), data=df) +
geom_point(alpha = 1/20) +
xlim(13,90)
ggplot(aes(x=age, y=friend_count), data=df) +
geom_jitter(alpha = 1/20) +
xlim(13,90)
```
#### What do you notice in the plot?
Response:
People who's age is under 30 have more friends
***
### Coord_trans()
Notes:
```{r Coord_trans()}
ggplot(aes(x=age, y=sqrt(friend_count)), data=df) +
geom_point(alpha = 1/20) +
xlim(13,90)
ggplot(aes(x=age, y=friend_count), data=df) +
geom_point(alpha = 1/20) +
xlim(13,90) +
scale_y_sqrt()
```
#### Look up the documentation for coord_trans() and add a layer to the plot that transforms friend_count using the square root function. Create your plot!
```{r}
ggplot(aes(x=age, y=friend_count), data=df) +
geom_point(alpha = 1/20, position = position_jitter(h=0)) +
xlim(13,90) +
coord_trans(y = 'sqrt')
```
#### What do you notice?
***
### Alpha and Jitter
Notes:
```{r Alpha and Jitter}
ggplot(aes(x=age, y=friendships_initiated), data=df) +
geom_point(alpha = 1/20, position = position_jitter(h=0)) +
xlim(13,90)
```
***
### Overplotting and Domain Knowledge
Notes:
***
### Conditional Means
Notes:
```{r Conditional Means}
install.packages('dplyr')
library(dplyr)
age_groups <- group_by(df, age)
print(age_groups)
df.fc_by_age <- summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
df.fc_by_age <- arrange(df.fc_by_age, age)
```
Create your plot!
```{r Conditional Means Plot}
df.fc_by_age <- df %.%
group_by(age) %.%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n=n()) %.%
arrange(age)
head(df.fc_by_age)
ggplot(data = df.fc_by_age, aes(x=age, y=friend_count_mean)) + geom_line()
ggplot(data = df.fc_by_age, aes(x=age, y=friend_count_median)) + geom_line()
```
***
### Overlaying Summaries with Raw Data
Notes:
```{r Overlaying Summaries with Raw Data}
ggplot(aes(x=age, y=friend_count), data=df) +
geom_point(alpha = 1/20, position = position_jitter(h=0), color='orange') +
xlim(13,90) +
coord_trans(y = 'sqrt') +
geom_line(stat='summary', fun.y=mean) +
geom_line(stat='summary', fun.y=quantile, probs=0.25, linetype=2, color='blue') +
geom_line(stat='summary', fun.y=quantile, probs=0.75, linetype=2, color='red')
install.packages("dplyr")
library(dplyr)
pf.fc_by_age_months2 <- pf %>%
group_by(age_with_months) %>%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %>%
arrange(age_with_months)
library(dplyr)
df.fc_by_age_months2 <- df %>%
group_by(age_with_months) %>%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %>%
arrange(age_with_months)
df$age_with_months <- df$age + (12-df$dob_month)/12.0
***
library(dplyr)
df.fc_by_age_months2 <- df %>%
group_by(age_with_months) %>%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %>%
arrange(age_with_months)
View(df.fc_by_age_months2)
library(dplyr)
df.fc_by_age_months <- df %>%
group_by(age_with_months) %>%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %>%
arrange(age_with_months)
df.fc_by_age_months2 <- NULL
View(df.fc_by_age_months)
ggplot(aes(x=age_with_months, y=friend_count_mean), data = subset(df.fc_by_age_months, age_with_months<71) + geom_line()
ggplot(aes(x=age_with_months, y=friend_count_mean), data = subset(df.fc_by_age_months, age_with_months<71)) +
geom_line()
library(ggplot2)
ggplot(aes(x=age_with_months, y=friend_count_mean), data = subset(df.fc_by_age_months, age_with_months<71)) +
geom_line()
p1 <- ggplot(aes(x=age, y=friend_count_mean), data = subset(df.fc_by_age, age<71)) + geom_line()
p2 <- ggplot(aes(x=age_with_months, y=friend_count_mean), data = subset(df.fc_by_age_months, age_with_months<71)) +
geom_line()
library(gridExtra)
grid.arrange(p2, p1, ncol=1)
p3 <- ggplot(aes(x=round(age/5)*5, y=friend_count), data = subset(df.fc_by_age, age<71)) +
geom_line(stat='summary', fun.y=mean)
***
p1 <- ggplot(aes(x=age, y=friend_count_mean), data = subset(df.fc_by_age, age<71)) +
geom_line()
p2 <- ggplot(aes(x=age_with_months, y=friend_count_mean), data = subset(df.fc_by_age_months, age_with_months<71)) +
geom_line()
p3 <- ggplot(aes(x=round(age/5)*5, y=friend_count), data = subset(df.fc_by_age, age<71)) +
geom_line()
library(gridExtra)
grid.arrange(p2, p1, p3, ncol=1)
p3 <- ggplot(aes(x=round(age/5)*5, y=friend_count), data = subset(df, age<71)) +
geom_line()
p1 <- ggplot(aes(x=age, y=friend_count_mean), data = subset(df.fc_by_age, age<71)) +
geom_line()
p2 <- ggplot(aes(x=age_with_months, y=friend_count_mean), data = subset(df.fc_by_age_months, age_with_months<71)) +
geom_line()
p3 <- ggplot(aes(x=round(age/5)*5, y=friend_count), data = subset(df, age<71)) +
geom_line()
library(gridExtra)
grid.arrange(p2, p1, p3, ncol=1)
p1 <- ggplot(aes(x=age, y=friend_count_mean), data = subset(df.fc_by_age, age<71)) +
geom_line()
p2 <- ggplot(aes(x=age_with_months, y=friend_count_mean), data = subset(df.fc_by_age_months, age_with_months<71)) +
geom_line()
p3 <- ggplot(aes(x=round(age/5)*5, y=friend_count), data = subset(df, age<71)) +
geom_line(stat='summary', fun.y=mean)
library(gridExtra)
grid.arrange(p2, p1, p3, ncol=1)
p1 <- ggplot(aes(x=age, y=friend_count_mean), data = subset(df.fc_by_age, age<71)) +
geom_line()
p2 <- ggplot(aes(x=age_with_months, y=friend_count_mean), data = subset(df.fc_by_age_months, age_with_months<71)) +
geom_line()
p3 <- ggplot(aes(x=round(age/5)*5, y=friend_count), data = subset(df, age<71)) +
geom_line(stat='summary', fun.y=mean)
p4 = p1 + geom_smooth()
library(gridExtra)
grid.arrange(p2, p1, p3, p4, ncol=1)
p1 <- ggplot(aes(x=age, y=friend_count_mean), data = subset(df.fc_by_age, age<71)) +
geom_line()
p2 <- ggplot(aes(x=age_with_months, y=friend_count_mean), data = subset(df.fc_by_age_months, age_with_months<71)) +
geom_line()
p3 <- ggplot(aes(x=round(age/5)*5, y=friend_count), data = subset(df, age<71)) +
geom_line(stat='summary', fun.y=mean)
p4 = p2 + geom_smooth()
library(gridExtra)
grid.arrange(p1, p2, p3, p4, ncol=1)
